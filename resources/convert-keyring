#!/bin/bash

# Script to convert old (pre GnuPG 2.1) public key files to the new
# key format.

if ! gpg --list-config --with-colons | grep -qF cfg:version:2.1; then
	echo "gpg 2.1 not found! exiting."
	exit 3
fi


if [[ "$1" != "-y" && "$1" != "-f" ]]; then
	cat <<-EOT

	This script converts your existing public keys to the GnuPG 2.1 keyring
	format. Once you do this, GnuPG 1.x and 2.0.x will use a different file
	for storing the public keys. This may lead to incompatibilities; we therefore
	recommend that you only do this if you don't want to use GnuPG 1.x or 2.0.x
	anymore.

	Type Y (and hit ENTER) to continue or anything else to abort
	EOT
	read r

	if [[ "$r" != "y" && "$r" != "Y" ]]; then
		echo "aborted"
		exit 2
	fi
fi

GNUPGHOME=${GNUPGHOME:-$HOME/.gnupg}
cd $GNUPGHOME

if [[ -f pubring.kbx ]]; then
	echo "New public key file already existing; nothing to do."
	echo "If you want to re-convert your public keys, please delete pubring.kbx first"
	exit 1
fi

mv -f pubring.gpg gpg1-public-keys.gpg
mv -f trustdb.gpg trustdb.gpg.orig

gpg --import gpg1-public-keys.gpg

if [[ $? -ne 0 ]]; then
	mv -f gpg1-public-keys.gpg pubring.gpg
	mv -f trustdb.gpg.orig trustdb.gpg
	echo "Conversion failed; reverted all steps"
	exit 1
fi

rm -f trustdb.gpg
mv trustdb.gpg.orig trustdb.gpg

gpg --check-trustdb
mv -f gpg1-public-keys.gpg pubring.gpg

echo "Done"

